cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
g <- function(y) {
print(z)
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
print(z)
g <- function(y) {
print(z)
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(2)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
z
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(datasets)
data(iris)
iris
head(iris)
iris[,"Species" == "virginica"]
iris[iris[,"Species" == "virginica"]]
iris[,iris["Species" == "virginica"]]
iris["Species" == "virginica"]
iris["Species" == "virginica",]
iris[,"Species" == "virginica"]
iris[,iris$Species == "virginica"]
iris[iris$Species == "virginica"]
iris[iris$Species == "virginica"]
iris$Species
iris[,iris$Species=="virginica"]
iris[,"Species"=="virginica"]
head(iris)
apply(iris)
apply(iris,mean)
head(iris)
myspecies = iris["Species"]
myspecies
myspecies = iris["Species"] == "virginica"
myspecies
head(iris)
iris[,iris["Species"] == "virginica"]
iris[,iris$Species == "virginica"]
iris[,myspecies]
iris
iris[,Species]
library(datasets)
data(iris)
?iris
class(iris)
head(iris)
head(iris$Sepal.Width)
head(iris$Sepal.Width > 3.2)
head(iris$Species == "virginica")
apply(iris, iris$Species == "virginica", mean)
lapply(iris, iris$Species == "virginica", mean)
apply(iris, iris$Species == "virginica", mean)
apply(iris, (iris$Species == "virginica"), mean)
apply(iris, iris[iris$Species == "virginica"], mean)
tapply(iris, iris[iris$Species == "virginica"], mean)
tapply(iris, iris$Species == "virginica", mean)
lapply(iris, mean)
lapply(iris, mean)
head(iris)
lapply(iris, mean)
class(iris)
lapply(iris, mean)
lapply(iris, mean)
lapply(iris, mean)
sapply(iris, mean)
require(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
View(cran3)
myf = read.csv(path2csv and stringsAsFactors = FALSE)
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf);
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
select(cran, )
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
filter(cran, r_version == "3.1.1" OR country == "US")
filter(cran, r_version == "3.1.1" || country == "US")
filter(cran, 1 == 1)
filter(cran, r_version == "3.1.1", country == "US")
?Comparision
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 3097700 & r_os == "linux-gnu")
filter(cran, size > 11097700 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, size > 100500, r_os == "linux-gnu")
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), desc(ip_id))
arrange(cran2, country, desc(r_version), ip_id)
select(cran, ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
group_by(cran, package)
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
?n
by_package
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit;
submit
submit()
submit()
submit()
submit()
getwd/-
();
getwd();
setwd("E:\\Documents and Settings\\PaMa\\coursera\\M3Project")
?bind
?merge
?paste
?cbind
source(run_analysis.R)
source("run_analysis.R")
View(test)
View(train)
source("run_analysis.R")
?read
?read.csv
source("run_analysis.R")
View(header)
View(header)
View(header)
source("run_analysis.R")
source("run_analysis.R")
class(header)
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
View(header)
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
class(header)
?data.frame
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
view(features)
View(features)
View(features)
View(features)
source("run_analysis.R")
source("run_analysis.R")
View(features)
source("run_analysis.R")
source("run_analysis.R")
View(X_test)
source("run_analysis.R")
X_test[1,561]
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
View(Y_test)
View(Y_test)
source("run_analysis.R")
View(X_test)
View(Y_test)
View(subject_test)
View(X_train)
?merge
?join
source("run_analysis.R")
View(dataset)
View(features)
View(features)
grep("[mean]", features$V2, value=TRUE)
grep("[mean|std]", features$V2, value=TRUE)
grep("['mean'|'std']", features$V2, value=TRUE)
?grep
grep("["mean"|"std""]", features$V2, value=TRUE)
grep("['mean'|'std']", features$V2)
grep("["mean"|"std""]", features$V2, value=TRUE)
grep("['mean'|'std']", features$V2, value=TRUE)
grep("["mean"|"std""]", features$V2, ignore.case=TRUE, value=TRUE)
grep("[mean|std]", features$V2, ignore.case=TRUE, value=TRUE)
grep("mean", features$V2, ignore.case=TRUE, value=TRUE)
grep("mean|std", features$V2, ignore.case=TRUE, value=TRUE)
grep("mean|std", features$V2, ignore.case=TRUE)
names(dataset)
grep("mean|std", names(dataset), ignore.case=TRUE)
dataset[, c( 1, 2, grep("mean|std", names(dataset), ignore.case=TRUE) )]
View( dataset[, c( 1, 2, grep("mean|std", names(dataset), ignore.case=TRUE) )] )
source("run_analysis.R")
View(MSdataset)
activities <- read.table(".\\UCI HAR Dataset\\activity_labels.txt")
activities
MSdataset[MSdataset[,2]==1,2]
MSdataset[MSdataset[,2]==1,c(1,2,3)]
MSdataset[MSdataset[,2]==2,c(1,2,3)]
MSdataset[MSdataset[,2]==1,c(1,2,3)]
MSdataset[MSdataset[,2]==2,c(1,2,3)]
MSdataset[MSdataset[,2]==6,c(1,2,3)]
MSdataset[MSdataset[,2]==7,c(1,2,3)]
View(activities)
View(activities)
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
View(MSdataset)
